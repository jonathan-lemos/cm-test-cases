/* assumes your lexer is working properly */

void sub(int a, int b) {
	a - b;
	a > b;
	a <= b;
	return;
}

void newsub(void) {}

float foointvoid (int a, int b[], float c, float d[]) {
	int e;
	float m;
	float f;
	float g;
	if (a + b[1 + 2 * 3] > (a * ((a))))
		if (b[1] > b[4 + (5 * (6 - (7 / (8))))])
			main();
		else {
			int f[9];
		}
	c = d[b[b[0]]] + (9 * d[main() + 1] + d[a * 10]) + c * c / c / c / c + c + c + c;
	;;;;
	{int q;{{
		float f[99];
		f[0] = f[1] = d[0] + c * 2.0;
		return foointvoid(b[e] + q, b, c + d[11] + d[12] / (d[13] / (d[14] * d[15])), f);
	}}q + 4;}
	while (16 + 17 / 18 * 19 - 20 - (21 - 22)) {
		float g;
		if (2.0e14 > 2e-14) {
			return g;
			return f;
		}
		return g + foointvoid / 99.99;
	}

	while ((9e0 < 9e1) != (9e1 > 9e2)) ;
	e = a > 0 + 4;
	m = f = g = d[1 + main() / 4 / (4 - 4 + 4 * 4)] = c;
	if (a) ; else ;
	if (m > f) {
		return d[0];
	}
	else
		return d[1];
}

int main(void) {
	int a;
	int b[1];
	int c;
	int d[1];
	sub(4, 6);
	floatmainvoid(a = 4 + 4, b, c, d);
	newsub();
	return 0;
}
